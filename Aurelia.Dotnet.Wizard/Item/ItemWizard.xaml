<Window x:Class="Aurelia.DotNet.Wizard.ItemWizard"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Aurelia.DotNet.Wizard"
        xmlns:ext="clr-namespace:Aurelia.DotNet;assembly=Aurelia.DotNet"
        xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
        mc:Ignorable="d" Title="Aurelia Project Build"
        WindowStartupLocation="CenterOwner" FontSize="14" Icon="../aurelia.ico"
        Background="{DynamicResource {x:Static vs:EnvironmentColors.PanelGradientBrushKey}}"
        WindowStyle="None"
        AllowsTransparency="True" 
        Foreground="{DynamicResource {x:Static vs:EnvironmentColors.PanelTextBrushKey}}"
        MinWidth="450" MinHeight="400" SizeToContent="WidthAndHeight"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="StylesheetLanguages" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="ext:Models.StylesheetLanguage"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style TargetType="CheckBox">
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="10,5,10,3"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.PanelTextBrushKey}}"/>
                <Style.Triggers>
                    <Trigger Property="Grid.Column" Value="1">
                        <Setter Property="Margin" Value="20,5,10,3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin" Value="5,5,10,0"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.PanelTextBrushKey}}"/>
                <Style.Triggers>
                    <Trigger Property="Grid.Column" Value="1">
                        <Setter Property="Margin" Value="15,5,10,0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="10,0,10,5"/>
                <Setter Property="Padding" Value="3,1,0,1"/>
            </Style>
            <Style x:Key="Default" TargetType="TextBox">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="10,0,10,5"/>
                <EventSetter Event="GotFocus" Handler="SelectAllOnFocus"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.SearchBoxBackgroundBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.SystemButtonTextBrushKey}}"/>
                <Style.Triggers>
                    <Trigger Property="Grid.Column" Value="1">
                        <Setter Property="Margin" Value="20,0,10,5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="MinWidth" Value="100"/>
            </Style>
            <Style x:Key="Custom" BasedOn="{StaticResource Default}" TargetType="TextBox">
                <Setter Property="IsEnabled" Value="{Binding ElementName=useCustomNames, Path=IsChecked}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.SystemButtonTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="10" FocusManager.FocusedElement="{Binding ElementName=compName}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.2*"/>
        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" Grid.Row="0">Component name:</Label>
        <TextBox Grid.Column="0" Grid.Row="1" x:Name="compName" Style="{StaticResource Default}" />

        <Label Grid.Column="0" Grid.Row="2">Class name:</Label>
        <TextBox Grid.Column="0" Grid.Row="3" x:Name="compClassName" Style="{StaticResource Custom}"/>

        <Label Grid.Column="0" Grid.Row="4">Selector prefix:</Label>
        <TextBox Grid.Column="0" Grid.Row="5" x:Name="compSelectorPrefix" Style="{StaticResource Default}" >app</TextBox>

        <Label Grid.Column="0" Grid.Row="6">Selector:</Label>
        <TextBox Grid.Column="0" Grid.Row="7" x:Name="compSelector" Style="{StaticResource Custom}"/>

        <Label Grid.Column="0" Grid.Row="8">Stylesheet language:</Label>
        <ComboBox Grid.Column="0" Grid.Row="9" x:Name="compStyleLanguage" ItemsSource="{Binding Source={StaticResource StylesheetLanguages}}"/>

        <CheckBox Grid.Column="1" Grid.Row="0" IsChecked="{Binding GenerateRoutes}" >Generate Routes</CheckBox>
        <TreeView Grid.Column="1" Grid.Row="1" Grid.RowSpan="9" ItemsSource="{Binding Routes}" x:Name="routeTreeView">
            <TreeView.Resources>
                <HierarchicalDataTemplate  x:Key="ChildRouteTemplate" ItemsSource="{Binding ChildRoutes}">
                    <TextBlock Text="{Binding Title}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Foreground="Red"/>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate x:Key="RouteTemplate" ItemsSource="{Binding ChildRoutes}" ItemTemplate="{StaticResource ChildRouteTemplate}">
                    <StackPanel>
                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>

        <!--<CheckBox Grid.Column="1" Grid.Row="0" IsChecked="True" x:Name="createCompFolder"
                  ToolTip="Create separate folder for component files">Folder name:</CheckBox>
        <TextBox Grid.Column="1" Grid.Row="1" x:Name="compFolderName" Style="{StaticResource Custom}"/>

        <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="True" x:Name="createCompTemplateFile"
                  ToolTip="Create component template file">Template file name:</CheckBox>
        <TextBox Grid.Column="1" Grid.Row="3" x:Name="compTemplateFileName" Style="{StaticResource Custom}"/>

        <CheckBox Grid.Column="1" Grid.Row="4" IsChecked="True" x:Name="createCompClassFile"
                  ToolTip="Create component class file">Class file name:</CheckBox>
        <TextBox Grid.Column="1" Grid.Row="5" x:Name="compClassFileName" Style="{StaticResource Custom}"/>


        <CheckBox Grid.Column="1" Grid.Row="6" IsChecked="True" x:Name="createCompTestFile"
                  ToolTip="Create compoent spec file">Tests file name:</CheckBox>
        <TextBox Grid.Column="1" Grid.Row="7" x:Name="compTestFileName" Style="{StaticResource Custom}"/>

        <CheckBox Grid.Column="1" Grid.Row="8" IsChecked="True" x:Name="createCompStyleFile"
                  ToolTip="Create component stylesheet file">Styles file name:</CheckBox>
        <TextBox Grid.Column="1" Grid.Row="9" x:Name="compStyleFileName" Style="{StaticResource Custom}"/>

        <CheckBox Grid.Column="0" Grid.Row="10" x:Name="useCustomNames" Margin="10,5,10,12"
                  ToolTip="Enable editing all values">Use custom names</CheckBox>-->
        <StackPanel Grid.Column="1" Grid.Row="10" Orientation="Horizontal" 
                    HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,20,0,0">
            <Button x:Name="addButton" Click="SaveChanges" IsDefault="True">Add</Button>
            <Button IsCancel="True">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
